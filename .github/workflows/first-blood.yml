# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
   push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: first-blood    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_MAC_PATH: './mac'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '12.16.1'                # set this to the node version to use

jobs:
  build-for-mac:
    name: build-deploy-for-mac
    runs-on: macos-latest
    steps:
    - name: 拉仓库
      uses: actions/checkout@v2
    - name: 构建node环境 Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: 安装依赖
      run: npm install
    - name: 打包electron
      run: npm run electron:build
    - name: 查看dist文件列表
      run: ls ./dist_electron
    - name: 上传Release静态资源 dmg
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./dist_electron/mac/${{ steps.pkg.outputs.productName }}-${{ steps.pkg.outputs.version }}.dmg
         asset_name: ${{ steps.pkg.outputs.productName }}-${{ steps.pkg.outputs.version }}.dmg
         asset_content_type: application/octet-stream
        
